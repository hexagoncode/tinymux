CXX = @CXX@

MODS_CXX = funcs.cpp sample.cpp sum.cpp sqlproxy.cpp sqlslave.cpp

PRODUCTS = $(MODS_CXX:.cpp=.@MODULE_EXT@)

all: $(PRODUCTS)

.SUFFIXES:
.SUFFIXES: .o .cpp .@MODULE_EXT@

% : RCS/%,v
% : RCS/%
% : %,v
% : s.%
% : SCCS/s.%

.cpp.@MODULE_EXT@:
	$(CXX) @MODULE_CPPFLAGS@ -o $@ $< -L.. @MUX_LIBS@ @LIBS@

$(PRODUCTS): ../libmux.@MODULE_EXT@

../libmux.@MODULE_EXT@: ../Makefile
	( cd ..; make $(notdir $@) )

../Makefile: ../Makefile.in ../configure ../autoconf.h.in
	( cd ..; ./configure )

BASIC_CLEAN=$(strip $(wildcard *.o *~ a.out core gmon.out warn.log) $(PRODUCTS))
CONFIGS=$(wildcard config.log config.status Makefile depend)

realclean:
	rm -f $(strip $(BASIC_CLEAN) $(CONFIGS))

clean:
	rm -f $(BASIC_CLEAN)

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),realclean)
configure autoconf.h.in: configure.ac
	autoconf -f
	autoheader -f
Makefile autoconf.h: Makefile.in configure autoconf.h.in
	./configure && touch autoconf.h Makefile
$(wildcard *.o *.@MODULE_EXT@): Makefile

depend: Makefile $(MODS_CXX)
	@echo Regenerating dependencies
	@$(CXX) -MM $(MODS_CXX) > depend || rm depend
-include depend
endif
endif

# end
